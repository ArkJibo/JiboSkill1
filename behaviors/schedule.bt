{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "options": {},
        "children": [
            "6e813632-83ce-438b-b412-f690cd6ab7e2",
            "33939c18-5b63-4623-90eb-a99cc0e50f9b",
            "741ac5d6-a479-48d2-b516-dc5a55bccdad"
        ]
    },
    "meta": {
        "version": 1
    },
    "741ac5d6-a479-48d2-b516-dc5a55bccdad": {
        "id": "741ac5d6-a479-48d2-b516-dc5a55bccdad",
        "class": "TextToSpeechJs",
        "name": "Report schedule",
        "options": {
            "getWords": [
                "(callback) => {",
                "    var events = require('../src/core/event/event');",
                "    var moment = require('moment');",
                "    ",
                "    var results = notepad.getFetchResult(events.FETCH_SCHEDULE);",
                "    var response = '';",
                "    if (results.result.length === 0) {",
                "        response += 'You have no events that day!';",
                "    } else {",
                "        var day = moment(parseInt(results.result[0].time));",
                "        var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',",
                "            'September', 'October', 'November', 'December'];",
                "            ",
                "        response += 'You have the following events for ';",
                "        response += day.format('dddd') + ', ' + monthNames[day.format('M') - 1] + ' ' + day.format('D') + ': ';",
                "        results.result.forEach((evt) => {",
                "            var time = moment(parseInt(evt.time));",
                "            response += evt.type + ' at ' + time.format('hh:mm a') + '. ';",
                "        });",
                "    }",
                "    ",
                "    callback(response);",
                "}"
            ],
            "onWord": [
                "(word) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "6e813632-83ce-438b-b412-f690cd6ab7e2": {
        "id": "6e813632-83ce-438b-b412-f690cd6ab7e2",
        "class": "Subtree",
        "name": "",
        "options": {
            "behaviorPath": "listen-time.bt",
            "getNotepad": [
                "() => {",
                "    return notepad;",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1,
        "children": []
    },
    "33939c18-5b63-4623-90eb-a99cc0e50f9b": {
        "id": "33939c18-5b63-4623-90eb-a99cc0e50f9b",
        "class": "ExecuteScriptAsync",
        "name": "",
        "options": {
            "exec": [
                "(succeed, fail) => {",
                "    if (notepad.getItem('dateListen')) {",
                "        var ScheduleListener = require('../listeners/schedule');",
                "        var listener = new ScheduleListener(blackboard, notepad);",
                "        listener.process(notepad.getItem('dateListen'), succeed);",
                "    } else {",
                "        succeed();",
                "    }",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    }
}